{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jbram\\\\Desktop\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jbram\\\\Desktop\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jbram\\\\Desktop\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jbram\\\\Desktop\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jbram\\\\Desktop\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jbram\\\\Desktop\\\\clicky-game\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport cards from \"./cards.json\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cards: cards,\n      score: 0,\n      highscore: 0\n    };\n\n    _this.gameOver = function () {\n      if (_this.state.score > _this.state.highScore) {\n        _this.setState({\n          highscore: _this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      _this.state.cards.forEach(function (card) {\n        card.count = 0;\n      });\n\n      alert(\"Game Over : ( \\nscore: \".concat(_this.state.score, \")\"));\n\n      _this.setState({\n        score: 0\n      });\n\n      return true;\n    };\n\n    _this.clickCount = function (id) {\n      _this.state.cards.find(function (o, i) {\n        if (o.id === id) {\n          if (cards[i].count === 0) {\n            cards[i].count = cards[i].count + 1;\n\n            _this.setState({\n              score: _this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n\n            _this.state.cards.sort(function () {\n              return Math.random() - 0.5;\n            });\n\n            return true;\n          } else {\n            _this.gameOver();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        score: this.state.score,\n        highscore: this.state.highscore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), this.state.cards.map(function (card) {\n        return React.createElement(Card, {\n          clickCount: _this2.clickCount,\n          id: card.id,\n          key: card.id,\n          image: card.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\jbram\\Desktop\\clicky-game\\src\\App.js"],"names":["React","Component","Card","Wrapper","Navbar","cards","App","state","score","highscore","gameOver","highScore","setState","console","log","forEach","card","count","alert","clickCount","id","find","o","i","sort","Math","random","map","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAO,WAAP;;IAGMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNF,MAAAA,KAAK,EAALA,KADM;AAENG,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE;AAHL,K;;UAMRC,Q,GAAW,YAAM;AACf,UAAI,MAAKH,KAAL,CAAWC,KAAX,GAAmB,MAAKD,KAAL,CAAWI,SAAlC,EAA6C;AAC3C,cAAKC,QAAL,CAAc;AAACH,UAAAA,SAAS,EAAE,MAAKF,KAAL,CAAWC;AAAvB,SAAd,EAA6C,YAAW;AACtDK,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,SAAvB;AACD,SAFD;AAGD;;AACD,YAAKF,KAAL,CAAWF,KAAX,CAAiBU,OAAjB,CAAyB,UAAAC,IAAI,EAAI;AAC/BA,QAAAA,IAAI,CAACC,KAAL,GAAa,CAAb;AACD,OAFD;;AAIAC,MAAAA,KAAK,kCAA2B,MAAKX,KAAL,CAAWC,KAAtC,OAAL;;AACA,YAAKI,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAE;AAAR,OAAd;;AACA,aAAO,IAAP;AACD,K;;UAEDW,U,GAAa,UAAAC,EAAE,EAAI;AACjB,YAAKb,KAAL,CAAWF,KAAX,CAAiBgB,IAAjB,CAAsB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC9B,YAAID,CAAC,CAACF,EAAF,KAASA,EAAb,EAAiB;AACf,cAAIf,KAAK,CAACkB,CAAD,CAAL,CAASN,KAAT,KAAmB,CAAvB,EAA0B;AACxBZ,YAAAA,KAAK,CAACkB,CAAD,CAAL,CAASN,KAAT,GAAiBZ,KAAK,CAACkB,CAAD,CAAL,CAASN,KAAT,GAAiB,CAAlC;;AACA,kBAAKL,QAAL,CAAc;AAACJ,cAAAA,KAAK,EAAG,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,aAAd,EAA8C,YAAW;AACvDK,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,KAAvB;AACD,aAFD;;AAGA,kBAAKD,KAAL,CAAWF,KAAX,CAAiBmB,IAAjB,CAAsB;AAAA,qBAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,aAAtB;;AACA,mBAAO,IAAP;AACD,WAPD,MAOO;AACL,kBAAKhB,QAAL;AACD;AACF;AACF,OAbD;AAcD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAI,KAAKH,KAAL,CAAWC,KAA5B;AAAmC,QAAA,SAAS,EAAI,KAAKD,KAAL,CAAWE,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEK,KAAKF,KAAL,CAAWF,KAAX,CAAiBsB,GAAjB,CAAqB,UAAAX,IAAI;AAAA,eACxB,oBAAC,IAAD;AACE,UAAA,UAAU,EAAE,MAAI,CAACG,UADnB;AAEE,UAAA,EAAE,EAAGH,IAAI,CAACI,EAFZ;AAGE,UAAA,GAAG,EAAGJ,IAAI,CAACI,EAHb;AAIE,UAAA,KAAK,EAAIJ,IAAI,CAACY,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAAzB,CAFL,CADF;AAaD;;;;EAtDe3B,S;;AAyDlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport cards from \"./cards.json\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n\n  state = {\n    cards,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highScore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n\n    alert(`Game Over : ( \\nscore: ${this.state.score})`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.cards.find((o, i) => {\n      if (o.id === id) {\n        if (cards[i].count === 0) {\n          cards[i].count = cards[i].count + 1;\n          this.setState({score : this.state.score + 1}, function() {\n            console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Wrapper>\n          <Navbar score = {this.state.score} highscore = {this.state.highscore}></Navbar>\n          {this.state.cards.map(card => (\n            <Card \n              clickCount={this.clickCount}\n              id ={card.id}\n              key ={card.id}\n              image = {card.image}\n              />\n          ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}